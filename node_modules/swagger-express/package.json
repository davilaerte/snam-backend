{
  "_from": "swagger-express",
  "_id": "swagger-express@1.0.5",
  "_inBundle": false,
  "_integrity": "sha1-xzAA7YRtGzNNc0tHyKNPIIZ4sGc=",
  "_location": "/swagger-express",
  "_phantomChildren": {
    "buffer-crc32": "0.2.1",
    "commander": "1.3.2",
    "connect": "2.14.1",
    "mkdirp": "0.3.5"
  },
  "_requested": {
    "escapedName": "swagger-express",
    "fetchSpec": "latest",
    "name": "swagger-express",
    "raw": "swagger-express",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/swagger-express/-/swagger-express-1.0.5.tgz",
  "_shasum": "c73000ed846d1b334d734b47c8a34f208678b067",
  "_spec": "swagger-express",
  "_where": "/home/davi/snam-backend",
  "author": {
    "email": "fliptoo.studio@gmail.com",
    "name": "fliptoo"
  },
  "bugs": {
    "url": "https://github.com/fliptoo/swagger-express/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "async": "~0.2.7",
    "coffee-script": "*",
    "doctrine": "*",
    "express": "3.5.1",
    "js-yaml": "~2.1.0",
    "underscore": "*"
  },
  "deprecated": false,
  "description": "Document your express rest api by jsDoc or yaml.",
  "devDependencies": {
    "jade": "*",
    "jshint": "*"
  },
  "homepage": "https://github.com/fliptoo/swagger-express#readme",
  "keywords": [
    "api",
    "coffee-script",
    "express",
    "jsdoc",
    "restful",
    "swagger",
    "swagger-ui",
    "yaml",
    "yml"
  ],
  "main": "./index",
  "name": "swagger-express",
  "optionalDependencies": {},
  "readme": "{swagger-express}\n=========\n\n[Swagger](https://developers.helloreverb.com/swagger/) is a specification and complete framework \nimplementation for describing, producing, consuming, and visualizing RESTful web services.\nView [demo](http://petstore.swagger.wordnik.com/).\n\n__{swagger-express}__ is a simple and clean solution to integrate swagger with express.\n\n## Installation\n\n    $ npm install -g swagger-express\n\n## Quick Start\n\nConfigure {swagger-express} as express middleware.\n\n\n`apiVersion`      -> Your api version.\n\n`swaggerVersion`  -> Swagger version.\n\n`swaggerUI`       -> Where is your swagger-ui?\n\n`swaggerURL`      -> Path to use for swagger ui web interface.\n\n`swaggerJSON`     -> Path to use for swagger ui JSON.\n\n`basePath`        -> The basePath for swagger.js\n\n`apis`            -> Define your api array.\n\n`middleware`      -> Function before response.\n\n```\nvar swagger = require('swagger-express');\n\napp.configure(function(){\n  ...\n  app.use(swagger.init(app, {\n    apiVersion: '1.0',\n    swaggerVersion: '1.0',\n    swaggerURL: '/swagger',\n    swaggerJSON: '/api-docs.json',\n    swaggerUI: './public/swagger/',\n    basePath: 'http://localhost:3000',\n    apis: ['./api.js', './api.yml'],\n    middleware: function(req, res){}\n  }));\n  app.use(app.router);\n  ...\n});\n``` \n## Read from jsdoc\n\nExample 'api.js'\n\n```js\n\n/**\n * @swagger\n * resourcePath: /api\n * description: All about API\n */\n\n/**\n * @swagger\n * path: /login\n * operations:\n *   -  httpMethod: POST\n *      summary: Login with username and password\n *      notes: Returns a user based on username\n *      responseClass: User\n *      nickname: login\n *      consumes: \n *        - text/html\n *      parameters:\n *        - name: username\n *          description: Your username\n *          paramType: query\n *          required: true\n *          dataType: string\n *        - name: password\n *          description: Your password\n *          paramType: query\n *          required: true\n *          dataType: string\n */\nexports.login = function (req, res) {\n  var user = {};\n  user.username = req.param('username');\n  user.password = req.param('password');\n  res.json(user);\n}\n\n/**\n * @swagger\n * models:\n *   User:\n *     id: User\n *     properties:\n *       username:\n *         type: String\n *       password:\n *         type: String    \n */\n```\n\n## Read from yaml file\n\nExample 'api.yml'\n\n```yml\nresourcePath: /api\ndescription: All about API\napis: \n\n- path: /login\n  operations:\n\n  - httpMethod: POST\n    summary: Login with username and password\n    notes: Returns a user based on username\n    responseClass: User\n    nickname: login\n    consumes: \n      - text/html\n    parameters:\n\n    - name: username\n      dataType: string\n      paramType: query\n      required: true\n      description: Your username\n\n    - name: password\n      dataType: string\n      paramType: query\n      required: true\n      description: Your password\n\nmodels:\n    User:\n      id: User\n      properties:\n        username:\n          type: String\n        password:\n          type: String    \n```\n\n## Read from jsdoc\n\nExample 'api.coffee'\n\n```coffee\n\n###\n * @swagger\n * resourcePath: /api\n * description: All about API\n###\n\n###\n * @swagger\n * path: /login\n * operations:\n *   -  httpMethod: POST\n *      summary: Login with username and password\n *      notes: Returns a user based on username\n *      responseClass: User\n *      nickname: login\n *      consumes:\n *        - text/html\n *      parameters:\n *        - name: username\n *          description: Your username\n *          paramType: query\n *          required: true\n *          dataType: string\n *        - name: password\n *          description: Your password\n *          paramType: query\n *          required: true\n *          dataType: string\n###\n\n###\n * @swagger\n * models:\n *   User:\n *     id: User\n *     properties:\n *       username:\n *         type: String\n *       password:\n *         type: String\n###\n```\n\n\n## Examples\n\nClone the {swagger-express} repo, then install the dev dependencies:\n\n    $ git clone git://github.com/fliptoo/swagger-express.git --depth 1\n    $ cd swagger-express\n    $ npm install\n\nand run the example:\n\n    $ cd example\n    $ node app.js\n    \n# Credits\n\n- [Express](https://github.com/visionmedia/express)\n- [swagger-jack](https://github.com/feugy/swagger-jack)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Fliptoo &lt;fliptoo.studio@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/fliptoo/swagger-express.git"
  },
  "scripts": {
    "test": "jshint --config jshint.cfg $(find . -name *.js | grep -v './node_modules')"
  },
  "version": "1.0.5"
}
